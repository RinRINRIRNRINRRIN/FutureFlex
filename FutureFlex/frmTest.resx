<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="printDocument1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hf1kATfgf3gRDvwrGRvgAAAAAElFTkSuQmCC
</value>
  </data>
</root>